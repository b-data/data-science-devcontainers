{
  "name": "CUDA R verse",
  "build": {
    "dockerfile": "../R.Dockerfile",
    "context": "..",
    "args": {
      "BUILD_ON_IMAGE": "glcr.b-data.ch/cuda/r/verse",
      "R_VERSION": "4.4.3",
      // "CRAN": "https://cloud.r-project.org",
      "R_BINARY_PACKAGES": "1",
      // "UNMINIMIZE": "unset-to-keep-minimized",
      "JUPYTERLAB_VERSION": "4.3.5",
      // "RSTUDIO_VERSION": "2024.12.0+467",
      // "INSTALL_DEVTOOLS": "unset-to-not-install",
      "NODE_VERSION": "20.18.2",
      "USE_ZSH_FOR_ROOT": "unset-to-use-bash",
      "LANG": "en_US.UTF-8",
      "TZ": "Etc/UTC"
    }
  },

  "onCreateCommand": "onCreateCommand.sh",
  "postStartCommand": "postStartCommand.sh && ${HOME}/.local/bin/dockerSystemPrune.sh",
  "postAttachCommand": "${HOME}/.local/bin/checkForUpdates.sh && nvidia_entrypoint.sh",

  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "configureZshAsDefaultShell": true,
      "upgradePackages": false,
      "username": "vscode",
      "userUid": "automatic",
      "userGid": "automatic"
    },
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
      "moby": false
    },
    // A comma separated list of packages to install
    "ghcr.io/rocker-org/devcontainer-features/apt-packages:1": {
      "packages": ""
    }
  },

  "customizations": {
    "vscode": {
      "extensions": [
        "alefragnani.project-manager",
        "christian-kohler.path-intellisense",
        "DavidAnson.vscode-markdownlint",
        "eamodio.gitlens@11.7.0",
        "editorconfig.editorconfig",
        "GitHub.vscode-pull-request-github",
        "GitLab.gitlab-workflow",
        "grapecity.gc-excelviewer",
        "mhutchie.git-graph",
        "ms-python.python",
        "ms-toolsai.jupyter",
        "mutantdino.resourcemonitor",
        "piotrpalarz.vscode-gitignore-generator",
        "redhat.vscode-yaml",
        "REditorSupport.r",
        "James-Yu.latex-workshop",
        "quarto.quarto",
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode",
        "ms-python.black-formatter",
        "timonwong.shellcheck",
        "exiasr.hadolint",
        "ms-azuretools.vscode-docker"
      ],
      "settings": {
        "gitlab.aiAssistedCodeSuggestions.enabled": false,
        "gitlab.duoChat.enabled": false,
        "gitlens.showWelcomeOnInstall": false,
        "gitlens.showWhatsNewAfterUpgrades": false,
        "r.bracketedPaste": true,
        "r.plot.useHttpgd": true,
        "r.rterm.linux": "/usr/local/bin/R",
        "r.rterm.option": [
          "--no-save",
          "--no-restore"
        ],
        "r.workspaceViewer.showObjectSize": true,
        "resmon.show.battery": false,
        "resmon.show.cpufreq": false
      }
    }
  },

  // Set 'remoteUser' to 'root' to connect as root instead.
  "remoteUser": "vscode",
  "workspaceMount": "source=dsdc-cuda-r-verse-home-vscode,target=/home/vscode,type=volume",
  // "workspaceMount": "source=${localWorkspaceFolder}/.devcontainer/bind-mounts/dsdc-cuda-r-verse-home-vscode,target=/home/vscode,type=bind",
  "workspaceFolder": "/home/vscode",

  // "remoteUser": "root",
  // "workspaceMount": "source=dsdc-cuda-r-verse-root,target=/root,type=volume",
  // // "workspaceMount": "source=${localWorkspaceFolder}/.devcontainer/bind-mounts/dsdc-cuda-r-verse-root,target=/root,type=bind",
  // "workspaceFolder": "/root",

  "runArgs": [
    "--gpus", "device=all",
    "--shm-size", "2g"
  ],

  "remoteEnv": {
    // Enable CUDA forward compatibility. Only applicable for systems
    // with NVIDIA Data Center GPUs or select NGC-Ready NVIDIA RTX boards.
    // "LD_LIBRARY_PATH": "/usr/local/cuda/compat:${containerEnv:LD_LIBRARY_PATH}",
    //
    // By default, CUDA will use all available CUDA-capable devices.
    // Set the following environment variable to control the exact devices to use.
    // "CUDA_VISIBLE_DEVICES": "0",
    //
    // By default, BLAS/OpenMP will use as many threads as possible.
    // Set the following environment variable to control the exact number to use.
    // "OMP_NUM_THREADS": "1",
    //
    // Pip: Install packages to the user site
    "PIP_USER": "1"
  }
}
